package dom.code;


import java.util.List;

import javax.jdo.annotations.PersistenceCapable;

import org.apache.isis.applib.DomainObjectContainer;
import org.apache.isis.applib.annotation.AutoComplete;
import org.apache.isis.applib.annotation.MultiLine;
import org.apache.isis.applib.annotation.ObjectType;
import org.apache.isis.applib.filter.Filter;
import org.joda.time.LocalDate;
import com.google.common.base.Objects;



@PersistenceCapable
@ObjectType("Exploit")
@AutoComplete(repository=RepoCode.class, action="autoComplete")
public class Exploit {

	private String name;
	
	private String code;
	private Product product;
	private List<Description> description;
	private LocalDate date;
	private String generatedCode;
	private List<Properties> properties;
	public List<Properties> getProperties() {
		return properties;
	}

	public LocalDate getDate() {
		return date;
	}

	public void setDate(LocalDate date) {
		this.date = date;
	}

	public void setProperties(List<Properties> properties) {
		this.properties = properties;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	@MultiLine
	public String getCode() {
		return code;
	}
	@MultiLine
	public void setCode(String code) {
		this.code = code;
	}

	public Product getProduct() {
		return product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	public List<Description> getDescription() {
		return description;
	}

	public void setDescription(List<Description> description) {
		this.description = description;
	}


	@MultiLine
	public String getGeneratedCode() {
		return generatedCode;
	}
	@MultiLine
	public void setGeneratedCode(String generatedCode) {
		this.generatedCode = generatedCode;
	}

	public DomainObjectContainer getContainer() {
		return container;
	}

	public void setContainer(DomainObjectContainer container) {
		this.container = container;
	}

	public static Filter<Exploit> thoseOwnedBy(final String currentUser) {
        return new Filter<Exploit>() {
            @Override
            public boolean accept(final Exploit exploit) {
                return Objects.equal("sven", currentUser);
            }

        };
    }
	@SuppressWarnings("unused")
    private DomainObjectContainer container;

    public void setDomainObjectContainer(final DomainObjectContainer container) {
        this.container = container;
    }

}
